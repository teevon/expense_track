<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qtZIZ4M8AAAAAElFTkSuQmCC
</value>
  </data>
</root>